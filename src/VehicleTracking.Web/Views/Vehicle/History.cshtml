@model VehicleTracking.Web.Models.Vehicle
@using VehicleTracking.Web.Services
@using VehicleTracking.Web.Helpers
@{
    ViewData["Title"] = $"History - {Model.VehicleName}";
    var fromDate = ViewBag.From as DateTime? ?? DateTime.Today.AddDays(-7);
    var toDate = ViewBag.To as DateTime? ?? DateTime.Now;
    var locations = ViewBag.Locations as List<VehicleTracking.Web.Models.GpsLocation> ?? new List<VehicleTracking.Web.Models.GpsLocation>();
}


<div class="row mb-3">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center">
            <h2><i class="fas fa-history me-2"></i>History: @Model.VehicleName</h2>
            <a asp-action="Track" asp-route-id="@Model.Id" class="btn btn-primary">
                <i class="fas fa-crosshairs me-1"></i>Live Tracking
            </a>
        </div>
    </div>
</div>

<!-- Date Range Filter -->
<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h6><i class="fas fa-calendar me-2"></i>Filter by Date Range</h6>
            </div>
            <div class="card-body">
                <form method="get" id="historyFilterForm">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="fromDate" class="form-label">From Date</label>
                            <input type="datetime-local" class="form-control" id="fromDate" name="from"
                                   value="@fromDate.ToString("yyyy-MM-ddTHH:mm")" />
                        </div>
                        <div class="col-md-3">
                            <label for="toDate" class="form-label">To Date</label>
                            <input type="datetime-local" class="form-control" id="toDate" name="to"
                                   value="@toDate.ToString("yyyy-MM-ddTHH:mm")" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search me-1"></i>Filter
                                </button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="button" class="btn btn-outline-secondary" onclick="setQuickRange('today')">
                                    Today
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-outline-info btn-sm" onclick="setQuickRange('yesterday')">Yesterday</button>
                                <button type="button" class="btn btn-outline-info btn-sm" onclick="setQuickRange('week')">Last 7 Days</button>
                                <button type="button" class="btn btn-outline-info btn-sm" onclick="setQuickRange('month')">Last 30 Days</button>
                                <button type="button" class="btn btn-outline-success btn-sm" onclick="exportHistory()">
                                    <i class="fas fa-download me-1"></i>Export CSV
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- History Summary -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-white bg-info">
            <div class="card-body text-center">
                <i class="fas fa-map-marker-alt fa-2x mb-2"></i>
                <h4 id="total-points">@locations.Count</h4>
                <p class="mb-0">Total Points</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success">
            <div class="card-body text-center">
                <i class="fas fa-route fa-2x mb-2"></i>
                <h4 id="total-distance">0.0 km</h4>
                <p class="mb-0">Distance</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning">
            <div class="card-body text-center">
                <i class="fas fa-tachometer-alt fa-2x mb-2"></i>
                <h4 id="avg-speed">0 km/h</h4>
                <p class="mb-0">Avg Speed</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger">
            <div class="card-body text-center">
                <i class="fas fa-stopwatch fa-2x mb-2"></i>
                <h4 id="max-speed">0 km/h</h4>
                <p class="mb-0">Max Speed</p>
            </div>
        </div>
    </div>
</div>

<!-- Map and Timeline -->
<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5><i class="fas fa-route me-2"></i>Route History</h5>
                <div class="btn-group" role="group">
                    <button class="btn btn-sm btn-outline-primary" onclick="fitMapToRoute()">
                        <i class="fas fa-expand me-1"></i>Fit Route
                    </button>
                    <button class="btn btn-sm btn-outline-secondary" onclick="toggleAnimation()">
                        <i class="fas fa-play me-1"></i><span id="animation-btn-text">Play</span>
                    </button>
                    <button class="btn btn-sm btn-outline-info" onclick="clearMap()">
                        <i class="fas fa-eraser me-1"></i>Clear
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <div id="history-map" style="height: 500px;"></div>
            </div>
        </div>

        <!-- Timeline Control -->
        <div class="card mt-3">
            <div class="card-header">
                <h6><i class="fas fa-clock me-2"></i>Timeline Control</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <input type="range" class="form-range" id="timelineSlider" min="0" max="100" value="0" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <small class="text-muted">Current Time:</small>
                        <div id="current-time">@fromDate.ToString("MMM dd, yyyy HH:mm")</div>
                    </div>
                    <div class="col-md-4">
                        <small class="text-muted">Speed:</small>
                        <div id="current-speed">0 km/h</div>
                    </div>
                    <div class="col-md-4">
                        <small class="text-muted">Position:</small>
                        <div id="current-position">0, 0</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <!-- Vehicle Info -->
        <div class="card mb-3">
            <div class="card-header">
                <h6><i class="fas fa-car me-2"></i>Vehicle Information</h6>
            </div>
            <div class="card-body">
                <h5>@Model.VehicleName</h5>
                <p class="mb-1"><strong>Device ID:</strong> @Model.DeviceId</p>
                <p class="mb-1"><strong>License:</strong> @(Model.LicensePlate ?? "Not set")</p>
                <p class="mb-1"><strong>Driver:</strong> @(Model.DriverName ?? "Not assigned")</p>
                <p class="mb-1"><strong>Period:</strong> @fromDate.ToString("MMM dd") - @toDate.ToString("MMM dd, yyyy")</p>
            </div>
        </div>

        <!-- Speed Chart -->
        <div class="card mb-3">
            <div class="card-header">
                <h6><i class="fas fa-chart-line me-2"></i>Speed Over Time</h6>
            </div>
            <div class="card-body">
                <canvas id="speedChart" width="400" height="200"></canvas>
            </div>
        </div>

        <!-- Location List -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6><i class="fas fa-list me-2"></i>Location Points</h6>
                <small class="text-muted">@locations.Count points</small>
            </div>
            <div class="card-body p-0">
                <div id="location-list" style="max-height: 400px; overflow-y: auto;">
                    @if (locations.Any())
                    {
                        @foreach (var location in locations.OrderByDescending(l => l.Timestamp))
                        {
                            <div class="location-item p-2 border-bottom cursor-pointer"
                                 onclick="highlightLocation(@location.Id, @location.Latitude, @location.Longitude)"
                                 data-lat="@location.Latitude" data-lng="@location.Longitude" data-speed="@location.Speed"
                                 data-time="@location.Timestamp.ToString("yyyy-MM-ddTHH:mm:ss")">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <strong>@location.Timestamp.ToString("HH:mm:ss")</strong>
                                        <br>
                                        <small class="text-muted">@location.Timestamp.ToString("MMM dd, yyyy")</small>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge @(location.Speed > 0 ? "bg-success" : "bg-secondary")">
                                            @(location.Speed?.ToString("F0") ?? "0") km/h
                                        </span>
                                        <br>
                                        <small class="text-muted">@location.Satellites sats</small>
                                    </div>
                                </div>
                                <small class="text-muted">
                                    @location.Latitude.ToString("F6"), @location.Longitude.ToString("F6")
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="p-3 text-center text-muted">
                            <i class="fas fa-info-circle mb-2"></i>
                            <p>No location data found for the selected period.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script src="~/js/vehicle-history.js" asp-append-version="true"></script>
    <script>
        const vehicleId = @Model.Id;

        // Use JsonHelper for consistent serialization
        const locationsData = @Html.Raw(JsonHelper.SerializeForJavaScript(locations.Select(l => l.ToDto())));
        const vehicleData = @Html.Raw(JsonHelper.SerializeForJavaScript(Model.ToDto()));

        document.addEventListener('DOMContentLoaded', function() {
            initializeHistoryPage();
        });

        function initializeHistoryPage() {
            if (window.historyManager) {
                window.historyManager.initialize(locationsData);
            }
        }

        function highlightLocation(locationId, lat, lng) {
            if (window.historyManager) {
                const location = locationsData.find(l => l.id === locationId);
                if (location) {
                    window.historyManager.highlightLocation(locationId, lat, lng,
                        window.VehicleTracking.safeNumber(location.speed), location.timestamp);
                }
            }
        }

        function fitMapToRoute() {
            if (window.historyManager) {
                window.historyManager.fitMapToRoute();
            }
        }

        function toggleAnimation() {
            if (window.historyManager) {
                window.historyManager.toggleAnimation();
            }
        }

        function clearMap() {
            if (window.historyManager) {
                window.historyManager.clearMap();
            }
        }

        function setQuickRange(range) {
            const now = new Date();
            let from, to = now;

            switch (range) {
                case 'today':
                    from = new Date(now.getFullYear(), now.getMonth(), now.getDate());
                    break;
                case 'yesterday':
                    from = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);
                    to = new Date(now.getFullYear(), now.getMonth(), now.getDate());
                    break;
                case 'week':
                    from = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
                    break;
                case 'month':
                    from = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);
                    break;
                default:
                    return;
            }

            // Update form inputs
            document.getElementById('fromDate').value = from.toISOString().slice(0, 16);
            document.getElementById('toDate').value = to.toISOString().slice(0, 16);

            // Submit form
            document.getElementById('historyFilterForm').submit();
        }

        function exportHistory() {
            const urlParams = new URLSearchParams(window.location.search);
            const from = urlParams.get('from') || new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();
            const to = urlParams.get('to') || new Date().toISOString();

            const exportUrl = `/Vehicle/ExportHistory/${vehicleId}?from=${encodeURIComponent(from)}&to=${encodeURIComponent(to)}&format=csv`;
            window.open(exportUrl, '_blank');
        }
    </script>
}